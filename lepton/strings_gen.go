// generated by stringer -output=strings_gen.go -type=CameraStatus,Command,FFCShutterMode,FFCState,Flag,RegisterAddress,ShutterTempLockoutState,TelemetryLocation; DO NOT EDIT

package lepton

import "fmt"

const _CameraStatus_name = "SystemReadySystemInitializingSystemInLowPowerModeSystemGoingIntoStandbySystemFlatFieldInProcess"

var _CameraStatus_index = [...]uint8{0, 11, 29, 49, 71, 95}

func (i CameraStatus) String() string {
	if i+1 >= CameraStatus(len(_CameraStatus_index)) {
		return fmt.Sprintf("CameraStatus(%d)", i)
	}
	return _CameraStatus_name[_CameraStatus_index[i]:_CameraStatus_index[i+1]]
}

const _Command_name = "AgcEnableAgcRoiSelectAgcHistogramStatsAgcHeqDampFactorAgcHeqClipLimitHighAgcHeqClipLimitLowAgcHeqEmptyCountsAgcHeqOutputScaleFactorAgcCalculationEnableSysPingSysStatusSysSerialNumberSysUptimeSysHousingTemperatureSysTemperatureSysTelemetryEnableSysTelemetryLocationSysExecuteFrameAverageSysFlatFieldFramesSysCustomSerialNumberSysRoiSceneStatsSysRoiSceneSelectSysThermalShutdownCountSysShutterPositionSysFFCModeSysFCCRunNormalizationSysFCCStatusVidColorLookupSelectVidColorLookupTransferVidFocusCalculationEnableVidFocusRoiSelectVidFocusMetricThresholdVidFocusMetricGetVidVideoFreezeEnable"

var _Command_map = map[Command]string{
	256: _Command_name[0:9],
	264: _Command_name[9:21],
	268: _Command_name[21:38],
	292: _Command_name[38:54],
	300: _Command_name[54:73],
	304: _Command_name[73:91],
	316: _Command_name[91:108],
	324: _Command_name[108:131],
	328: _Command_name[131:151],
	512: _Command_name[151:158],
	516: _Command_name[158:167],
	520: _Command_name[167:182],
	524: _Command_name[182:191],
	528: _Command_name[191:212],
	532: _Command_name[212:226],
	536: _Command_name[226:244],
	540: _Command_name[244:264],
	544: _Command_name[264:286],
	548: _Command_name[286:304],
	552: _Command_name[304:325],
	556: _Command_name[325:341],
	560: _Command_name[341:358],
	564: _Command_name[358:381],
	568: _Command_name[381:399],
	572: _Command_name[399:409],
	576: _Command_name[409:431],
	580: _Command_name[431:443],
	772: _Command_name[443:463],
	776: _Command_name[463:485],
	780: _Command_name[485:510],
	784: _Command_name[510:527],
	788: _Command_name[527:550],
	792: _Command_name[550:567],
	804: _Command_name[567:587],
}

func (i Command) String() string {
	if str, ok := _Command_map[i]; ok {
		return str
	}
	return fmt.Sprintf("Command(%d)", i)
}

const _FFCShutterMode_name = "FFCShutterModeManualFFCShutterModeAutoFFCShutterModeExternal"

var _FFCShutterMode_index = [...]uint8{0, 20, 38, 60}

func (i FFCShutterMode) String() string {
	if i+1 >= FFCShutterMode(len(_FFCShutterMode_index)) {
		return fmt.Sprintf("FFCShutterMode(%d)", i)
	}
	return _FFCShutterMode_name[_FFCShutterMode_index[i]:_FFCShutterMode_index[i+1]]
}

const _FFCState_name = "FFCNeverFFCInProgressFFCComplete"

var _FFCState_index = [...]uint8{0, 8, 21, 32}

func (i FFCState) String() string {
	if i+1 >= FFCState(len(_FFCState_index)) {
		return fmt.Sprintf("FFCState(%d)", i)
	}
	return _FFCState_name[_FFCState_index[i]:_FFCState_index[i+1]]
}

const _Flag_name = "DisabledEnabled"

var _Flag_index = [...]uint8{0, 8, 15}

func (i Flag) String() string {
	if i+1 >= Flag(len(_Flag_index)) {
		return fmt.Sprintf("Flag(%d)", i)
	}
	return _Flag_name[_Flag_index[i]:_Flag_index[i+1]]
}

const _RegisterAddress_name = "RegPowerRegStatusRegCommandIDRegDataLengthRegData0RegData1RegData2RegData3RegData4RegData5RegData6RegData7RegData8RegData9RegData10RegData11RegData12RegData13RegData14RegData15RegDataCRCRegDataBuffer0RegDataBuffer1"

var _RegisterAddress_map = map[RegisterAddress]string{
	0:     _RegisterAddress_name[0:8],
	2:     _RegisterAddress_name[8:17],
	4:     _RegisterAddress_name[17:29],
	6:     _RegisterAddress_name[29:42],
	8:     _RegisterAddress_name[42:50],
	10:    _RegisterAddress_name[50:58],
	12:    _RegisterAddress_name[58:66],
	14:    _RegisterAddress_name[66:74],
	16:    _RegisterAddress_name[74:82],
	18:    _RegisterAddress_name[82:90],
	20:    _RegisterAddress_name[90:98],
	22:    _RegisterAddress_name[98:106],
	24:    _RegisterAddress_name[106:114],
	26:    _RegisterAddress_name[114:122],
	28:    _RegisterAddress_name[122:131],
	30:    _RegisterAddress_name[131:140],
	32:    _RegisterAddress_name[140:149],
	34:    _RegisterAddress_name[149:158],
	36:    _RegisterAddress_name[158:167],
	38:    _RegisterAddress_name[167:176],
	40:    _RegisterAddress_name[176:186],
	63488: _RegisterAddress_name[186:200],
	64512: _RegisterAddress_name[200:214],
}

func (i RegisterAddress) String() string {
	if str, ok := _RegisterAddress_map[i]; ok {
		return str
	}
	return fmt.Sprintf("RegisterAddress(%d)", i)
}

const _ShutterTempLockoutState_name = "ShutterTempLockoutStateInactiveShutterTempLockoutStateHighShutterTempLockoutStateLow"

var _ShutterTempLockoutState_index = [...]uint8{0, 31, 58, 84}

func (i ShutterTempLockoutState) String() string {
	if i+1 >= ShutterTempLockoutState(len(_ShutterTempLockoutState_index)) {
		return fmt.Sprintf("ShutterTempLockoutState(%d)", i)
	}
	return _ShutterTempLockoutState_name[_ShutterTempLockoutState_index[i]:_ShutterTempLockoutState_index[i+1]]
}

const _TelemetryLocation_name = "HeaderFooter"

var _TelemetryLocation_index = [...]uint8{0, 6, 12}

func (i TelemetryLocation) String() string {
	if i+1 >= TelemetryLocation(len(_TelemetryLocation_index)) {
		return fmt.Sprintf("TelemetryLocation(%d)", i)
	}
	return _TelemetryLocation_name[_TelemetryLocation_index[i]:_TelemetryLocation_index[i+1]]
}
